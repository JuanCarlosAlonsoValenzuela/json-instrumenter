"C:\Program Files\Java\jdk1.8.0_202\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar=53203:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\out\production\daikon_modified;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-framework\javac.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-framework\checker.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\reflection-util-1.0.3.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\options-1.0.5.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\require-javadoc-1.0.2-all.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\java-getopt-1.0.14.0.1.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\bcel-6.5.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\plume-util-1.5.5.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\commons-exec-1.3.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\hamcrest-core-1.3-Daikon.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-qual.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\bcel-util-1.1.13.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\junit-4.13.2-Daikon.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\daikon-plumelib.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\jFormatString-3.0.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\javacutil-3.1.1.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\diffutils-1.3.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\threeten-extra-1.5.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\caffeine-2.8.4.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\error_prone_core-2.7.1-with-dependencies.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\dataflow-shaded-3.11.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\dcomp_premain.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\ChicoryPremain.jar;C:\Program Files\Java\jdk1.8.0_202\lib\tools.jar" daikon.Daikon
Daikon version 5.8.10, released November 1, 2021; http://plse.cs.washington.edu/daikon.
(read 1 decls file)
Processing trace data; reading 1 dtrace file:

===========================================================================
main.businessessearch.getBusinesses_200(main.getBusinesses_Input):::ENTER
input.radius >= 0
LENGTH(input.locale)==5
input.limit >= 0
input.offset >= 0
input.sort_by one of { "best_match", "rating", "review_count" }
input.price one of { "1%2C2", "4%2C1%2C2", "4%2C3" }
input.open_at one of { 0, 1646134297, 1646235976 }
input.attributes == "wheelchair_accessible"
===========================================================================
main.businessessearch.getBusinesses_200(main.getBusinesses_Input):::EXIT
input == orig(input)
input.term == orig(input.term)
input.location == orig(input.location)
input.latitude == orig(input.latitude)
input.longitude == orig(input.longitude)
input.radius == orig(input.radius)
input.categories == orig(input.categories)
input.locale == orig(input.locale)
input.limit == orig(input.limit)
input.offset == orig(input.offset)
input.sort_by == orig(input.sort_by)
input.price == orig(input.price)
input.open_now == orig(input.open_now)
input.open_at == orig(input.open_at)
input.attributes == orig(input.attributes)
input.radius >= 0
LENGTH(input.locale)==5
input.limit >= 0
input.offset >= 0
input.sort_by one of { "best_match", "rating", "review_count" }
input.price one of { "1%2C2", "4%2C1%2C2", "4%2C3" }
input.open_at one of { 0, 1646134297, 1646235976 }
input.attributes == "wheelchair_accessible"
return.total >= size(return.businesses[])
return.region.center.latitude > return.region.center.longitude
===========================================================================
main.businessessearch.getBusinesses_200_businesses(main.getBusinesses_Input):::ENTER
input.radius >= 0
LENGTH(input.locale)==5
input.limit >= 0
input.offset >= 0
input.sort_by one of { "best_match", "rating", "review_count" }
input.price one of { "1%2C2", "4%2C1%2C2", "4%2C3" }
input.open_at one of { 0, 1646134297, 1646235976 }
input.attributes == "wheelchair_accessible"
LENGTH(input.attributes)==21
===========================================================================
main.businessessearch.getBusinesses_200_businesses(main.getBusinesses_Input):::EXIT
input == orig(input)
input.term == orig(input.term)
input.location == orig(input.location)
input.latitude == orig(input.latitude)
input.longitude == orig(input.longitude)
input.radius == orig(input.radius)
input.categories == orig(input.categories)
input.locale == orig(input.locale)
input.limit == orig(input.limit)
input.offset == orig(input.offset)
input.sort_by == orig(input.sort_by)
input.price == orig(input.price)
input.open_now == orig(input.open_now)
input.open_at == orig(input.open_at)
input.attributes == orig(input.attributes)
input.radius >= 0
LENGTH(input.locale)==5
input.limit >= 0
input.offset >= 0
input.sort_by one of { "best_match", "rating", "review_count" }
input.price one of { "1%2C2", "4%2C1%2C2", "4%2C3" }
input.open_at one of { 0, 1646134297, 1646235976 }
input.attributes == "wheelchair_accessible"
LENGTH(input.attributes)==21
return.coordinates.longitude != 0
LENGTH(return.id)==22
return.is_closed == false
return.review_count >= 1
return.url is Url
return.transactions[] == []
LENGTH(return.location.country)==2
size(return.categories[]) one of { 1, 2, 3 }
size(return.location.display_address[]) one of { 2, 3, 4 }
input.radius >= size(return.transactions[])
input.limit >= size(return.transactions[])
input.offset >= size(return.transactions[])
input.open_at >= size(return.transactions[])
return.coordinates.latitude > return.coordinates.longitude
return.coordinates.latitude < return.distance
return.coordinates.latitude > return.rating
return.coordinates.longitude < return.distance
return.distance > return.rating
return.review_count > size(return.transactions[])
size(return.categories[])-1 >= size(return.transactions[])
size(return.categories[])-1 <= size(return.location.display_address[])
size(return.transactions[]) < size(return.location.display_address[])-1
===========================================================================
main.businessessearch.getBusinesses_200_businesses_categories(main.getBusinesses_Input):::ENTER
input.radius >= 0
LENGTH(input.locale)==5
input.limit >= 0
input.offset >= 0
input.sort_by one of { "best_match", "rating", "review_count" }
input.price one of { "1%2C2", "4%2C1%2C2", "4%2C3" }
input.open_at one of { 0, 1646134297, 1646235976 }
input.attributes == "wheelchair_accessible"
LENGTH(input.attributes)==21
===========================================================================
main.businessessearch.getBusinesses_200_businesses_categories(main.getBusinesses_Input):::EXIT
input == orig(input)
input.term == orig(input.term)
input.location == orig(input.location)
input.latitude == orig(input.latitude)
input.longitude == orig(input.longitude)
input.radius == orig(input.radius)
input.categories == orig(input.categories)
input.locale == orig(input.locale)
input.limit == orig(input.limit)
input.offset == orig(input.offset)
input.sort_by == orig(input.sort_by)
input.price == orig(input.price)
input.open_now == orig(input.open_now)
input.open_at == orig(input.open_at)
input.attributes == orig(input.attributes)
input.radius >= 0
LENGTH(input.locale)==5
input.limit >= 0
input.offset >= 0
input.sort_by one of { "best_match", "rating", "review_count" }
input.price one of { "1%2C2", "4%2C1%2C2", "4%2C3" }
input.open_at one of { 0, 1646134297, 1646235976 }
input.attributes == "wheelchair_accessible"
LENGTH(input.attributes)==21
Exiting Daikon.

Process finished with exit code 0
