"C:\Program Files\Java\jdk1.8.0_202\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar=54299:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\out\production\daikon_modified;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-framework\javac.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-framework\checker.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\reflection-util-1.0.3.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\options-1.0.5.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\require-javadoc-1.0.2-all.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\java-getopt-1.0.14.0.1.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\bcel-6.5.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\plume-util-1.5.5.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\commons-exec-1.3.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\hamcrest-core-1.3-Daikon.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-qual.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\bcel-util-1.1.13.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\junit-4.13.2-Daikon.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\daikon-plumelib.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\jFormatString-3.0.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\javacutil-3.1.1.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\diffutils-1.3.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\threeten-extra-1.5.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\caffeine-2.8.4.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\error_prone_core-2.7.1-with-dependencies.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\dataflow-shaded-3.11.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\dcomp_premain.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\ChicoryPremain.jar;C:\Program Files\Java\jdk1.8.0_202\lib\tools.jar" daikon.Daikon
Daikon version 5.8.10, released November 1, 2021; http://plse.cs.washington.edu/daikon.
(read 1 decls file)
Processing trace data; reading 1 dtrace file:

===========================================================================
main.albums{id}tracks.getAlbumTracks_200(main.getAlbumTracks_Input):::ENTER
LENGTH(input.id)==22
input.limit >= 0
input.offset >= 0
LENGTH(input.market)==2
===========================================================================
main.albums{id}tracks.getAlbumTracks_200(main.getAlbumTracks_Input):::EXIT
input == orig(input)
input.id == orig(input.id)
input.limit == orig(input.limit)
input.offset == return.offset
input.offset == orig(input.offset)
input.market == orig(input.market)
LENGTH(input.id)==22
input.limit >= 0
input.offset >= 0
LENGTH(input.market)==2
return.href is Url
return.next is Url
return.previous is Url
return.total >= 1
input.limit % return.limit == 0
input.limit <= return.limit
return.limit >= size(return.items[])
return.total >= size(return.items[])
===========================================================================
main.albums{id}tracks.getAlbumTracks_200_items(main.getAlbumTracks_Input):::ENTER
LENGTH(input.id)==22
input.limit >= 0
input.offset >= 0
LENGTH(input.market)==2
===========================================================================
main.albums{id}tracks.getAlbumTracks_200_items(main.getAlbumTracks_Input):::EXIT
input == orig(input)
input.id == orig(input.id)
input.limit == orig(input.limit)
input.offset == orig(input.offset)
input.market == orig(input.market)
return.linked_from.type == return.type
LENGTH(input.id)==22
input.limit >= 0
input.offset >= 0
LENGTH(input.market)==2
return.disc_number one of { 1, 2 }
LENGTH(return.external_urls.spotify)==53
return.external_urls.spotify is Url
LENGTH(return.href)==56
return.href is Url
LENGTH(return.id)==22
return.is_local == false
LENGTH(return.linked_from.external_urls.spotify)==53
return.linked_from.external_urls.spotify is Url
LENGTH(return.linked_from.href)==56
return.linked_from.href is Url
LENGTH(return.linked_from.id)==22
return.linked_from.type == "track"
LENGTH(return.linked_from.type)==5
LENGTH(return.linked_from.uri)==36
LENGTH(return.preview_url)==107
return.preview_url is Url
return.restrictions.reason == "market"
LENGTH(return.restrictions.reason)==6
return.track_number >= 1
return.type == "track"
LENGTH(return.type)==5
LENGTH(return.uri)==36
size(return.artists[]) >= 1
size(return.available_markets[])-1 != 0
input.limit < return.duration_ms
input.offset < return.duration_ms
input.market in return.available_markets[]
return.linked_from.external_urls.spotify in return.available_markets[]
return.linked_from.href in return.available_markets[]
return.linked_from.id in return.available_markets[]
return.linked_from.type in return.available_markets[]
return.linked_from.uri in return.available_markets[]
return.restrictions.reason in return.available_markets[]
return.disc_number < return.duration_ms
size(return.artists[])-1 % return.disc_number == 0
size(return.available_markets[]) % return.disc_number == 0
return.duration_ms > return.track_number
return.duration_ms > size(return.artists[])
return.duration_ms > size(return.available_markets[])
===========================================================================
main.albums{id}tracks.getAlbumTracks_200_items_artists(main.getAlbumTracks_Input):::ENTER
LENGTH(input.id)==22
input.limit >= 0
input.offset >= 0
LENGTH(input.market)==2
===========================================================================
main.albums{id}tracks.getAlbumTracks_200_items_artists(main.getAlbumTracks_Input):::EXIT
input == orig(input)
input.id == orig(input.id)
input.limit == orig(input.limit)
input.offset == orig(input.offset)
input.market == orig(input.market)
LENGTH(input.id)==22
input.limit >= 0
input.offset >= 0
LENGTH(input.market)==2
LENGTH(return.external_urls.spotify)==54
return.external_urls.spotify is Url
LENGTH(return.href)==57
return.href is Url
LENGTH(return.id)==22
return.type == "artist"
LENGTH(return.type)==6
LENGTH(return.uri)==37
Exiting Daikon.

Process finished with exit code 0
