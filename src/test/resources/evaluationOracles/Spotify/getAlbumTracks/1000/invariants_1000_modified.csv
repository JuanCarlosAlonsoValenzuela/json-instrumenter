main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::ENTER;LENGTH(input.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::ENTER;input.offset >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::ENTER;LENGTH(input.market)==2;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;LENGTH(input.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;input.offset >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;LENGTH(input.market)==2;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;LENGTH(return.href)==57;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;return.href is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;LENGTH(return.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;return.type == "artist";daikon.inv.unary.string.OneOfString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;LENGTH(return.type)==6;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;LENGTH(return.uri)==37;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;return.id is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;return.type is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;return.id is a substring of return.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT;return.type is a substring of return.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::ENTER;LENGTH(input.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::ENTER;input.offset >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::ENTER;LENGTH(input.market)==2;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.type == return.type;daikon.inv.binary.twoString.StringEqual
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(input.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;input.offset >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(input.market)==2;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;All the elements of return.available_markets[] have LENGTH=2;daikon.inv.unary.stringsequence.SequenceFixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.disc_number >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.href)==56;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.href is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.is_local == false;daikon.inv.unary.scalar.OneOfScalar
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.linked_from.href)==56;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.href is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.linked_from.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.type == "track";daikon.inv.unary.string.OneOfString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.linked_from.type)==5;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.linked_from.uri)==36;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.preview_url)==107;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.preview_url is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.restrictions.reason one of { "explicit", "market" };daikon.inv.unary.string.OneOfString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.track_number >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.type == "track";daikon.inv.unary.string.OneOfString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.type)==5;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;LENGTH(return.uri)==36;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;size(return.artists[]) >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;input.limit >= return.disc_number;daikon.inv.binary.twoScalar.IntGreaterEqual
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;input.limit < return.duration_ms;daikon.inv.binary.twoScalar.IntLessThan
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;input.offset < return.duration_ms;daikon.inv.binary.twoScalar.IntLessThan
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.disc_number < return.duration_ms;daikon.inv.binary.twoScalar.IntLessThan
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.duration_ms > return.track_number;daikon.inv.binary.twoScalar.IntGreaterThan
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.duration_ms > size(return.artists[]);daikon.inv.binary.twoScalar.IntGreaterThan
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.duration_ms > size(return.available_markets[]);daikon.inv.binary.twoScalar.IntGreaterThan
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.id is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.type is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.type is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.id is a substring of return.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.id is a substring of return.linked_from.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.type is a substring of return.linked_from.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.type is a substring of return.linked_from.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.id is a substring of return.linked_from.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.type is a substring of return.linked_from.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.linked_from.type is a substring of return.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.type is a substring of return.linked_from.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT;return.type is a substring of return.uri;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::ENTER;LENGTH(input.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::ENTER;input.offset >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::ENTER;LENGTH(input.market)==2;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.limit == return.limit;daikon.inv.binary.twoScalar.IntEqual
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.offset == return.offset;daikon.inv.binary.twoScalar.IntEqual
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;LENGTH(input.id)==22;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.offset >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;LENGTH(input.market)==2;daikon.inv.unary.string.FixedLengthString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.href is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.next is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.offset >= 0;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.previous is Url;daikon.inv.unary.string.IsUrl
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.total >= 1;daikon.inv.unary.scalar.LowerBound
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.id is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.id is a substring of return.next;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.id is a substring of return.previous;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.limit >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.market is a substring of return.href;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.market is a substring of return.next;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;input.market is a substring of return.previous;daikon.inv.binary.twoString.StdString$SubString
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.limit >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT;return.total >= size(return.items[]);daikon.inv.binary.twoScalar.IntGreaterEqual