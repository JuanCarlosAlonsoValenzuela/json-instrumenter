"C:\Program Files\Java\jdk1.8.0_202\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar=53152:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\out\production\daikon_modified;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-framework\javac.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-framework\checker.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\reflection-util-1.0.3.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\options-1.0.5.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\require-javadoc-1.0.2-all.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\java-getopt-1.0.14.0.1.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\bcel-6.5.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\plume-util-1.5.5.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\commons-exec-1.3.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\hamcrest-core-1.3-Daikon.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\checker-qual.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\bcel-util-1.1.13.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\junit-4.13.2-Daikon.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\daikon-plumelib.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\jFormatString-3.0.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\javacutil-3.1.1.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\diffutils-1.3.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\threeten-extra-1.5.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\caffeine-2.8.4.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\error_prone_core-2.7.1-with-dependencies.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\lib\error-prone\dataflow-shaded-3.11.0.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\dcomp_premain.jar;C:\Users\jcav\Documents\GitHub\daikon_modified\java\ChicoryPremain.jar;C:\Program Files\Java\jdk1.8.0_202\lib\tools.jar" daikon.Daikon
Daikon version 5.8.10, released November 1, 2021; http://plse.cs.washington.edu/daikon.
(read 1 decls file)
Processing trace data; reading 1 dtrace file:

===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers&price&taxes(main.getMultiHotelOffers&Input):::ENTER
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers&price&taxes(main.getMultiHotelOffers&Input):::EXIT
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
return.amount is Numeric
LENGTH(return.currency)==3
return.percentage is Numeric
return.pricingFrequency one of { "PER_NIGHT", "PER_STAY" }
return.pricingMode one of { "PER_OCCUPANT", "PER_PRODUCT" }
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers&price&variations&changes(main.getMultiHotelOffers&Input):::ENTER
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers&price&variations&changes(main.getMultiHotelOffers&Input):::EXIT
return.total == return.base
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
return.startDate is a Date. Format: YYYY/MM/DD
return.endDate is a Date. Format: YYYY/MM/DD
return.total is Numeric
return.base is Numeric
return.markups == null
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::ENTER
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::EXIT
input.adults == return.guests.adults
input.checkInDate == return.checkInDate
input.checkOutDate == return.checkOutDate
input.boardType == return.boardType
return.description.lang == return.room.description.lang
return.commission.description == return.policies.guarantee.description
return.commission.description == return.policies.deposit.description
return.commission.description == return.policies.prepay.description
return.price.markups == return.price.variations.average.markups
return.policies.prepay.acceptedPayments.creditCards == return.policies.prepay.acceptedPayments.methods
return.policies.cancellation.numberOfNights == size(return.policies.deposit.acceptedPayments.methods[])
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
LENGTH(return.id)==10
return.checkInDate is a Date. Format: YYYY/MM/DD
return.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(return.roomQuantity)==1
return.roomQuantity is Numeric
LENGTH(return.rateCode)==3
LENGTH(return.rateFamilyEstimated.code)==3
return.rateFamilyEstimated.type one of { "C", "P" }
LENGTH(return.rateFamilyEstimated.type)==1
LENGTH(return.category)==3
return.description.text == "Regular rate plan - free parking, breakfast"
LENGTH(return.description.text)==43
return.description.lang one of { "DE", "EN", "IT" }
LENGTH(return.description.lang)==2
return.commission.percentage is Numeric
return.commission.amount == "2.74"
LENGTH(return.commission.amount)==4
return.commission.amount is Numeric
return.commission.description == null
return.boardType one of { "BREAKFAST", "HALF_BOARD", "ROOM_ONLY" }
LENGTH(return.room.type)==3
return.room.typeEstimated.beds >= 0
LENGTH(return.room.description.lang)==2
return.guests.childAges == null
LENGTH(return.price.currency)==3
return.price.total is Numeric
return.price.base is Numeric
return.price.markups == null
return.price.variations.average.total is Numeric
return.price.variations.average.base is Numeric
return.policies.paymentType one of { "deposit", "guarantee" }
All the elements of return.policies.guarantee.acceptedPayments.creditCards[] have LENGTH=2
return.policies.guarantee.acceptedPayments.methods[] elements one of { "CORPORATE_ID", "CREDIT_CARD", "TRAVEL_AGENT_ID" }
return.policies.deposit.amount == "0.00"
LENGTH(return.policies.deposit.amount)==4
return.policies.deposit.amount is Numeric
All the elements of return.policies.deposit.acceptedPayments.creditCards[] have LENGTH=2
return.policies.deposit.acceptedPayments.methods[] elements one of { "ADVANCE_DEPOSIT", "CREDIT_CARD" }
return.policies.deposit.acceptedPayments.methods[] one of { [CREDIT_CARD], [CREDIT_CARD, ADVANCE_DEPOSIT] }
return.policies.prepay == null
return.policies.prepay.acceptedPayments == null
return.policies.prepay.acceptedPayments.creditCards == null
LENGTH(return.policies.holdTime.deadline)==19
return.policies.cancellation.type == "FULL_STAY"
LENGTH(return.policies.cancellation.type)==9
return.policies.cancellation.amount is Numeric
return.policies.cancellation.numberOfNights one of { 1, 8 }
LENGTH(return.policies.cancellation.deadline)==25
return.policies.cancellation.description.text one of { "NON-REFUNDABLE RATE", "Non refundable rate", "Plus Taxes and fees where appropriate." }
return.policies.cancellation.description.lang == "EN"
LENGTH(return.policies.cancellation.description.lang)==2
return.policies.checkInOut == null
return.policies.checkInOut.checkInDescription == null
return.policies.checkInOut.checkOutDescription == null
return.self is Url
LENGTH(return.cancelPolicyHash)==64
size(input.hotelIds[]) >= 1
size(return.price.taxes[]) >= 1
size(return.price.variations.changes[]) >= 1
size(return.policies.guarantee.acceptedPayments.methods[]) one of { 1, 2, 3 }
size(return.policies.deposit.acceptedPayments.methods[]) one of { 1, 2 }
input.adults <= size(return.policies.deposit.acceptedPayments.creditCards[])
input.roomQuantity >= size(return.policies.deposit.acceptedPayments.methods[])
return.room.typeEstimated.beds <= size(return.policies.guarantee.acceptedPayments.creditCards[])
return.policies.cancellation.numberOfNights <= size(input.hotelIds[])
return.policies.cancellation.numberOfNights <= size(return.price.taxes[])
return.policies.cancellation.numberOfNights >= size(return.policies.guarantee.acceptedPayments.methods[])
size(input.hotelIds[]) >= size(return.policies.deposit.acceptedPayments.methods[])
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data(main.getMultiHotelOffers&Input):::ENTER
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200&data(main.getMultiHotelOffers&Input):::EXIT
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
return.type == "hotel-offers"
LENGTH(return.type)==12
return.self is Url
LENGTH(return.hotel.hotelId)==8
LENGTH(return.hotel.chainCode)==2
LENGTH(return.hotel.dupeId)==9
return.hotel.dupeId is Numeric
LENGTH(return.hotel.cityCode)==3
return.hotel.type == "hotel"
LENGTH(return.hotel.type)==5
size(input.hotelIds[]) >= 1
size(return.offers[]) >= 1
return.hotel.hotelId in input.hotelIds[]
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200(main.getMultiHotelOffers&Input):::ENTER
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
size(input.hotelIds[]) >= 1
===========================================================================
main.shoppinghotel-offers.getMultiHotelOffers&200(main.getMultiHotelOffers&Input):::EXIT
All the elements of input.hotelIds[] have LENGTH=8
input.adults >= 1
input.checkInDate is a Date. Format: YYYY/MM/DD
input.checkOutDate is a Date. Format: YYYY/MM/DD
LENGTH(input.countryOfResidence)==2
input.roomQuantity >= 1
LENGTH(input.currency)==3
input.paymentPolicy one of { "DEPOSIT", "GUARANTEE", "NONE" }
input.boardType one of { "BREAKFAST", "ROOM_ONLY" }
LENGTH(input.boardType)==9
size(input.hotelIds[]) >= 1
size(input.hotelIds[]) >= size(return.data[])
Exiting Daikon.

Process finished with exit code 0
